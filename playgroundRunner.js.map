{"version":3,"file":"playgroundRunner.js","mappings":"oIAuBA,IAAIA,EA4DJ,SAAgBC,EAAeC,GAK9B,MAAO,CACNC,UAAW,GAAGD,cACdE,kBANyB,CACzBC,GAAI,GAAGH,KAMPI,WAAY,GAAGJ,iDACfK,oBAAgBC,EAElB,C,sIAzFA,6BACC,IAAKC,OACJ,MAAM,IAAIC,MAAM,4BAEjB,OAAOD,MACR,EAEA,uBACC,OAAQE,OAAeF,MACxB,EAUA,aAAOG,eACNC,EAAsB,EAAAC,iBAKtB,OAHKd,IACJA,EAKFY,eAA2BC,GAC1B,MAAME,EAASC,KAkChB,IAAoBC,EAhCbF,EAAeG,eAgCFD,EA/BDJ,EAAMV,UAgCjB,IAAIgB,SAASC,IACnB,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAAS,IAAMJ,IACtBC,EAAOT,OAAQ,EACfS,EAAOI,KAAO,kBACdJ,EAAOK,IAAMT,EACbK,SAASK,KAAKC,YAAYP,EAAO,KAnClCN,EAAOc,KAAM,EACbd,EAAOe,eAAiB,IAChBjB,EAAMP,WAId,MAAMyB,EAAMhB,EAAOG,QAGnB,OAFAa,EAAIC,OAAO,CAAEC,MAAOpB,EAAMT,oBAEnB,IAAIe,SAASC,IAEnBW,EAAI,CAAC,0BAA0B,KAC9BA,EACC,CACC,yCACA,sCACA,uCACA,uCACA,+CAED,KACCX,EAAIX,OAAO,GAEZ,GACA,GAEJ,CAtCsByB,CAAYrB,IAE1Bb,CACR,EAgDa,EAAAc,gBAAkBb,EAC9B,qCAGD,kB,kIC9EA,gDAsBA,IAAIkC,cAEJvB,eAAewB,WAAWC,OACzB,GAAIF,cACH,MAAM,IAAIzB,MAAM,uBAGjB,MAAM4B,oBAAsBhB,SAASC,cAAc,OACnDe,oBAAoBC,UAAY,mBAChC,MAAMC,WAAalB,SAASC,cAAc,OAC1CiB,WAAWD,UAAY,SACvBD,oBAAoBV,YAAYY,YAChClB,SAASmB,KAAKb,YAAYU,qBAE1BH,eAAgB,kBAAAO,YAAWL,MAAMM,mBAC3BR,cAENG,oBAAoBM,SAEpB,MAAMC,MAAQvB,SAASC,cAAc,SACrCsB,MAAMC,GAAK,eACXD,MAAME,UAAYV,MAAMW,IACxB1B,SAASmB,KAAKb,YAAYiB,OAE1BvB,SAASmB,KAAKM,WAAaV,MAAMY,KAEjC,IACCC,KAAKb,MAAMc,G,CACV,MAAOC,GACR,MAAMC,EAAM/B,SAASC,cAAc,OACnC8B,EAAIzB,YACHN,SAASgC,eAAe,GAAGF,MAASA,EAAYf,UAEjDf,SAASmB,KAAKc,aAAaF,EAAK/B,SAASmB,KAAKe,W,CAEhD,CAvDA,yBAEA7C,OAAO8C,iBAAiB,WAAYC,IAEnC,GADsC,SAAlB/C,OAAOgD,OAI1B,YADAC,QAAQC,MAAM,kBAGf,MAAMC,EAAIJ,EAAMK,KACD,eAAXD,EAAEE,KACL5B,WAAW0B,EAAEzB,OACQ,eAAXyB,EAAEE,OACE1C,SAAS2C,eACtB,gBAEKlB,UAAYe,EAAEd,I","sources":["file:////home/runner/work/monaco-editor/monaco-editor/website/src/monaco-loader.ts","file:////home/runner/work/monaco-editor/monaco-editor/website/src/runner/index.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function getLoadedMonaco(): typeof monaco {\n\tif (!monaco) {\n\t\tthrow new Error(\"monaco is not loaded yet\");\n\t}\n\treturn monaco;\n}\n\nexport function getMonaco(): typeof monaco | undefined {\n\treturn (window as any).monaco;\n}\n\nexport interface IMonacoSetup {\n\tloaderUrl: string;\n\tloaderConfigPaths: Record<string, string>;\n\tcodiconUrl: string;\n\tmonacoTypesUrl: string | undefined;\n}\n\nlet loadMonacoPromise: Promise<typeof monaco> | undefined;\nexport async function loadMonaco(\n\tsetup: IMonacoSetup = prodMonacoSetup\n): Promise<typeof monaco> {\n\tif (!loadMonacoPromise) {\n\t\tloadMonacoPromise = _loadMonaco(setup);\n\t}\n\treturn loadMonacoPromise;\n}\n\nasync function _loadMonaco(setup: IMonacoSetup): Promise<typeof monaco> {\n\tconst global = self as any;\n\n\tif (!(global as any).require) {\n\t\tawait loadScript(setup.loaderUrl);\n\t}\n\n\tglobal.AMD = true;\n\tglobal.getCodiconPath = () => {\n\t\treturn setup.codiconUrl;\n\t};\n\n\t/** @type {any} */\n\tconst req = global.require as any;\n\treq.config({ paths: setup.loaderConfigPaths });\n\n\treturn new Promise((res) => {\n\t\t// First load editor.main. If it inlines the plugins, we don't want to try to load them from the server.\n\t\treq([\"vs/editor/editor.main\"], () => {\n\t\t\treq(\n\t\t\t\t[\n\t\t\t\t\t\"vs/basic-languages/monaco.contribution\",\n\t\t\t\t\t\"vs/language/css/monaco.contribution\",\n\t\t\t\t\t\"vs/language/html/monaco.contribution\",\n\t\t\t\t\t\"vs/language/json/monaco.contribution\",\n\t\t\t\t\t\"vs/language/typescript/monaco.contribution\",\n\t\t\t\t],\n\t\t\t\t() => {\n\t\t\t\t\tres(monaco);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t});\n}\n\nfunction loadScript(path: string): Promise<void> {\n\treturn new Promise((res) => {\n\t\tconst script = document.createElement(\"script\");\n\t\tscript.onload = () => res();\n\t\tscript.async = true;\n\t\tscript.type = \"text/javascript\";\n\t\tscript.src = path;\n\t\tdocument.head.appendChild(script);\n\t});\n}\n\nexport const prodMonacoSetup = getMonacoSetup(\n\t\"node_modules/monaco-editor/min/vs\"\n);\n\nexport function getMonacoSetup(corePath: string): IMonacoSetup {\n\tconst loaderConfigPaths = {\n\t\tvs: `${corePath}`,\n\t};\n\n\treturn {\n\t\tloaderUrl: `${corePath}/loader.js`,\n\t\tloaderConfigPaths,\n\t\tcodiconUrl: `${corePath}/base/browser/ui/codicons/codicon/codicon.ttf`,\n\t\tmonacoTypesUrl: undefined,\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { loadMonaco } from \"../monaco-loader\";\nimport { IMessage, IPreviewState } from \"../shared\";\nimport \"./style.scss\";\n\nwindow.addEventListener(\"message\", (event) => {\n\tconst isInSandbox = window.origin === \"null\";\n\tif (!isInSandbox) {\n\t\t// To prevent someone from using this html file to run arbitrary code in non-sandboxed context\n\t\tconsole.error(\"not in sandbox\");\n\t\treturn;\n\t}\n\tconst e = event.data as IMessage | { kind: undefined };\n\tif (e.kind === \"initialize\") {\n\t\tinitialize(e.state);\n\t} else if (e.kind === \"update-css\") {\n\t\tconst style = document.getElementById(\n\t\t\t\"custom-style\"\n\t\t) as HTMLStyleElement;\n\t\tstyle.innerHTML = e.css;\n\t}\n});\n\nlet monacoPromise: Promise<any> | undefined = undefined;\n\nasync function initialize(state: IPreviewState) {\n\tif (monacoPromise) {\n\t\tthrow new Error(\"already initialized\");\n\t}\n\n\tconst loadingContainerDiv = document.createElement(\"div\");\n\tloadingContainerDiv.className = \"loader-container\";\n\tconst loadingDiv = document.createElement(\"div\");\n\tloadingDiv.className = \"loader\";\n\tloadingContainerDiv.appendChild(loadingDiv);\n\tdocument.body.appendChild(loadingContainerDiv);\n\n\tmonacoPromise = loadMonaco(state.monacoSetup);\n\tawait monacoPromise;\n\n\tloadingContainerDiv.remove();\n\n\tconst style = document.createElement(\"style\");\n\tstyle.id = \"custom-style\";\n\tstyle.innerHTML = state.css;\n\tdocument.body.appendChild(style);\n\n\tdocument.body.innerHTML += state.html;\n\n\ttry {\n\t\teval(state.js);\n\t} catch (err) {\n\t\tconst pre = document.createElement(\"pre\");\n\t\tpre.appendChild(\n\t\t\tdocument.createTextNode(`${err}: ${(err as any).state}`)\n\t\t);\n\t\tdocument.body.insertBefore(pre, document.body.firstChild);\n\t}\n}\n"],"names":["loadMonacoPromise","getMonacoSetup","corePath","loaderUrl","loaderConfigPaths","vs","codiconUrl","monacoTypesUrl","undefined","monaco","Error","window","async","setup","prodMonacoSetup","global","self","path","require","Promise","res","script","document","createElement","onload","type","src","head","appendChild","AMD","getCodiconPath","req","config","paths","_loadMonaco","monacoPromise","initialize","state","loadingContainerDiv","className","loadingDiv","body","loadMonaco","monacoSetup","remove","style","id","innerHTML","css","html","eval","js","err","pre","createTextNode","insertBefore","firstChild","addEventListener","event","origin","console","error","e","data","kind","getElementById"],"sourceRoot":""}